import Unit from '../../../unit/types/Unit';
import {getSurroundedAllies} from '../../../utils/surrounded';

export const assessVulnerability = (unit: Unit):number => {
    let vulnerability:number = 0;
    let numberOfAllies:number = getSurroundedAllies(unit).length;
    let unitSpeed:number = unit.speed;

    // assess vulnerabily based on number of allies nearby
    if(numberOfAllies === 0) {
        vulnerability = 100;
    } 

    else if(numberOfAllies === 1) { // 2 units
        vulnerability = 80;
    } 

    else if(numberOfAllies === 2) { // 3 units
        vulnerability = 30;
    } 

    else if(numberOfAllies === 3) { // 4 units
        vulnerability = 20;
    } 

    else if(numberOfAllies === 4) { // 5 units
        vulnerability = 10;
    } 
    
    else {
        vulnerability = 0;
    }


    // reduce vulnerabity based on unit's speed

    if(unitSpeed >= 35) {
        vulnerability -= 90;
    }

    else if(unitSpeed >= 30 && unitSpeed < 35) {
        vulnerability -= 70;
    }

    else if(unitSpeed >= 25 && unitSpeed < 30) {
        vulnerability -= 50;
    }

    else if(unitSpeed >= 20 && unitSpeed < 25) {
        vulnerability -= 30;
    }

    else if(unitSpeed >= 15 && unitSpeed < 20) {
        vulnerability -= 20;
    }

    // vulnerability cannot be less than 0
    if(vulnerability < 0) {
        vulnerability = 0;
    }

    return vulnerability;
}